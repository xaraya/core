<?xml version="1.0" encoding="utf-8"?>
<xar:template xmlns:xar="http://xaraya.com/2004/blocklayout">
    <xar:set name="debug">0</xar:set>
    <xar:if condition="$debug">
        <xar:set name="index_display">''</xar:set>
        <xar:set name="key_display">''</xar:set>
    <xar:else/>
        <xar:set name="index_display">'none'</xar:set>
        <xar:if condition="$associative_array">
            <xar:set name="key_display">''</xar:set>
        <xar:else/>
            <xar:set name="key_display">'none'</xar:set>
        </xar:if>
    </xar:if>

    <!-- Import the array table js -->
    <xar:javascript module="base" filename="array.js"/>

    <table class="xar-table xar-border-none xar-margin-thicktop">
        <thead>
            <tr>
                <!-- This column holds the index of the respective row -->
                <th style="width: 10px">
                    Row
                </th>
                
                <xar:for start="$i=0" test="$i lt count($column_titles)" iter="$i++">
                    <th class="xar-align-left">
                        #$column_titles[$i]#
                    </th>
                </xar:for>
                <th class="xar-align-right">Delete/Ignore</th>        
            </tr>        
        </thead>

        <!-- rows container (rows_id: 'rows' for js) -->
        <tbody id="#$id#_rows">
            <xar:for start="$i=0" test="$i lt $rows" iter="$i++">
                <!-- name[row] -->
                <xar:set name="j">$i</xar:set>
                <xar:set name="row_name">"{$name}[{$j}]"</xar:set>
                <xar:set name="row_id">"{$id}_{$j}"</xar:set>
                <xar:set name="col_name">"{$row_name}[0]"</xar:set>
                <xar:set name="col_id">"{$row_id}_0"</xar:set>
                <tr id="#$row_id#">
                
                    <!-- This column holds the index of the respective row -->
                    <!-- By definition this is a static value (can't change via the UI) -->
                    <td>
                        <span style="display: #$index_display#">
                            <xar:set name="index_name">"{$row_name}[1000000]"</xar:set>
                            <xar:set name="index_id">"{$row_id}_1000000"</xar:set>
                            #$index_name# #$index_id#
                        </span>
                        <input type="text" name="#$index_name#" id="#$index_id#" value="#$i+1#" style="width: 15px" readonly="readonly"/>
                    </td>
                    
                    <xar:for start="$k=0" test="$k lt count($column_titles)" iter="$k++">
                        <xar:set name="col_index">$k</xar:set>
                        <!-- columnname[row][column] -->                        
                        <xar:set name="col_name">"{$row_name}[{$col_index}]"</xar:set>
                        <xar:set name="col_id">"{$row_id}_{$col_index}"</xar:set>
                        <!-- propertyname[row][column] -->
                        <xar:set name="prop_name">"{$col_name}"</xar:set>
                        <xar:set name="prop_id">"{$col_id}"</xar:set>
                        <!-- property[row][column] -->
                        <!-- we need to instantiate the property this way so we can insert a default value -->
                        <xar:if condition="isset($column_defaults[$k])">
                            <xar:set name="property">DataPropertyMaster::getProperty(array('type'=>$column_types[$k],'defaultvalue'=>$column_defaults[$k]))</xar:set>
                        <xar:else/>
                            <xar:set name="property">DataPropertyMaster::getProperty(array('type'=>$column_types[$k]))</xar:set>
                        </xar:if>
                        <td>
                            <!-- row #$i# column #$k# -->
                            <span style="display: #$index_display#">#$prop_name#</span>
                            <xar:if condition="isset($value[$i][$k])">
                                <xar:if condition="isset($column_configurations[$k])">
                                    <xar:data-input property="$property" name="$prop_name" id="$prop_id" value="$value[$i][$k]" configuration="$column_configurations[$k]"/>
                                <xar:else/>
                                    <xar:data-input property="$property" name="$prop_name" id="$prop_id" value="$value[$i][$k]"/>
                                </xar:if>
                            <xar:else/>
                                <xar:if condition="isset($column_configurations[$k])">
                                    <xar:data-input property="$property" name="$prop_name" id="$prop_id" configuration="$column_configurations[$k]"/>
                                <xar:else/>
                                    <xar:data-input property="$property" name="$prop_name" id="$prop_id"/>
                                </xar:if>
                            </xar:if>
                        </td>
                    </xar:for>
                    <td class="xar-align-right">
                        <!-- If js is available this will be replaced by a delete icon -->
                        <!-- name[row][delete] -->
                        <xar:set name="del_name">"{$row_name}[delete]"</xar:set>
                        <xar:set name="del_id">"{$row_id}_delete"</xar:set>
                        <xar:if condition="($rows gt $minimum_rows) AND ($addremove eq 2)">
                            <xar:data-input type="checkbox" name="$del_name" id="$del_id" value="1" checked=""/>
                        <xar:else/>
                            <xar:data-input type="checkbox" name="$del_name" id="$del_id" value="1" checked="" disabled="disabled"/>
                        </xar:if>
                    </td>            
                </tr>
            </xar:for>
            <xar:set name="lastrow">$i</xar:set>
            
<!--  Begin dummy line for adding rows when no js enabled -->
<!--  NOTE: unless addremove is 0 this must always be present in the markup otherwise js will
      fail if a row is subsequently deleted and an attempt is made to add a new one -->
            <xar:if condition="($addremove ne 0)">
                <xar:set name="thisrow">$lastrow</xar:set>
                <xar:set name="row_name">"{$name}[{$thisrow}]"</xar:set>
                <xar:set name="row_id">"{$id}_{$thisrow}"</xar:set>
                <xar:set name="col_name">"{$row_name}[0]"</xar:set>
                <xar:set name="col_id">"{$row_id}_0"</xar:set>
                <!-- Hide this row if we're already at the limit 
                     NOTE: can't rely on JS for this, it may be disabled -->
                <xar:if condition="$rows lt $maximum_rows">
                    <xar:set name="row_display">''</xar:set>
                <xar:else/>
                    <xar:set name="row_display">'none'</xar:set>
                </xar:if>
                <!-- The row template (tpl_id: 'template' for js) 
                     If JS is available it will hide this and display the add button -->
                <tr id="#$id#_template" style="display: #$row_display#">
                    <td>
                        <span style="display: #$index_display#">
                            <xar:set name="index_name">"{$row_name}[1000000]"</xar:set>
                            <xar:set name="index_id">"{$row_id}_1000000"</xar:set>
                            #$index_name# #$index_id#
                        </span>
                        <input type="text" name="#$index_name#" id="#$index_id#" value="#$thisrow+1#" style="width: 15px" readonly="readonly"/>
                    </td>
                    <xar:for start="$k=0" test="$k lt count($column_titles)" iter="$k++">
                        <xar:set name="col_index">$k</xar:set>
                        <!-- name[row][column] -->                        
                        <xar:set name="col_name">"{$row_name}[{$col_index}]"</xar:set>
                        <xar:set name="col_id">"{$row_id}_{$col_index}"</xar:set>
                        <!-- name[row][column] -->
                        <xar:set name="prop_name">"{$col_name}"</xar:set>
                        <xar:set name="prop_id">"{$col_id}"</xar:set>
                        <td>
                            <xar:if condition="isset($column_defaults[$k])">
                                <xar:set name="col_default">$column_defaults[$k]</xar:set>
                            <xar:else/>
                                <xar:set name="col_default">''</xar:set>
                            </xar:if>
                            <xar:if condition="isset($column_configurations[$k])">
                                <xar:set name="col_config">$column_configurations[$k]</xar:set>
                            <xar:else/>
                                <xar:set name="col_config">''</xar:set>
                            </xar:if>
                            <span style="display: #$index_display#">#$prop_name#</span>
                            <xar:data-input type="$column_types[$k]" name="$prop_name" id="$prop_id" value="$col_default" configuration="$col_config"/>
                        </td>
                    </xar:for>
                    <td class="xar-align-right">
                        <!-- If js is available this will be replaced by a delete icon -->
                        <!-- name[row][delete] -->
                        <xar:set name="del_name">"{$row_name}[delete]"</xar:set>
                        <xar:set name="del_id">"{$row_id}_delete"</xar:set>
                        <xar:data-input type="checkbox" name="$del_name" id="$del_id" value="1" checked="checked"/>
                    </td>
                </tr>
            </xar:if>
<!--  End dummy line for adding rows when no js enabled --> 
        </tbody>
        <xar:if condition="($addremove ne 0)">
            <tfoot>
                <tr>
                    <xar:set name="infospan">$debug?count($column_titles)+1:count($column_titles)+1</xar:set>
                    <td colspan="#$infospan#">
                    <!-- Row count container (count_id: 'row_count' for js)
                         When JS is enabled and count_id is supplied this field will 
                         be updated with the current row count -->  
                        Total Rows: <span id="#$id#_row_count">#$lastrow#</span>
                    </td>
                    <!-- Add row container (add_id: 'addrow' for js) -->       
                    <td id="#$id#_addrow" colspan="1" class="xar-align-right">
                        <!-- Placeholder for the add button
                            If JS is available the add icon will appear here -->    
                    </td>            
                </tr>        
            </tfoot>
        </xar:if>
    </table>
    <!-- add and delete icons are now created by the js dynamically on init 
         set variables to pass to js (includes translated strings for icon alt and title :) )--> 
    <xar:set name="del_icon">xarTplGetImage("icons/delete.png", "base")</xar:set>
    <xar:var name="del_alt">Remove</xar:var>
    <xar:var name="del_title">Remove this row</xar:var>
    <xar:set name="add_icon">xarTplGetImage("icons/add.png", "base")</xar:set>
    <xar:var name="add_alt">Add</xar:var>
    <xar:var name="add_title">Add a new row</xar:var>
    <!-- Create the table js object and pass in configuration params -->  
    <!-- Set the debug option below to true to see debug info -->
    <script type="text/javascript">
//<![CDATA[ 
        var #$id# = new arrayTable( {               // var name is the id of this property
            id: '#$id#',                            // the id of this property
            name: '#$name#',                        // the name of this property
            min: '#$minimum_rows#',                 // minimum rows
            max: '#$maximum_rows#',                 // maximum rows
            addremove: '#$addremove#',              // addremove state [(0=None)|1=add|2=add/delete]
            rows_id: 'rows',                        // rows container suffix
            tpl_id: 'template',                     // row template suffix
            add_id: 'addrow',                       // add row container suffix 
            del_icon: '#$del_icon#',                // delete icon src
            del_alt: '#$del_alt#',                  // delete icon alt text
            del_title: '#$del_title#',              // delete icon title text
            add_icon: '#$add_icon#',                // add icon src
            add_alt: '#$add_alt#',                  // add icon alt text
            add_title: '#$add_title#',              // add icon title text
            icon_enabled: 'xar-icon',               // enabled icon class
            icon_disabled: 'xar-icon-disabled',     // disabled icon class
            count_id: 'row_count',                  // row count container suffix
            debug: false                            // debug
        } );
        // initialise the object
        #$id#.init();
//]]>
    </script>   
<!-- Here we store config options for unbound properties, so checkInput knows what to do -->
<!-- Should we support this? It's not generally supported -->
<!--
    <input type="hidden" name="#$name#[settings][lastrow]" id="#$name#_lastrow" value="#$lastrow#"/>
    <input type="hidden" name="#$name#[settings][associative_array]" id="#$name#_associative_array" value="#$associative_array#"/> 
--></xar:template>